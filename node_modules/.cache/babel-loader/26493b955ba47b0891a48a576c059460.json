{"ast":null,"code":"import _asyncToGenerator from \"F:/vuexianmu/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqGoodsInfo } from \"@/api\";\nvar state = {\n  //state数据别乱写,服务器返回数据，返回数组【根据服务器返回的类型】\n  goodInfo: {}\n}; //修改state的唯一手段\n\nvar mutations = {\n  GETGOODINFO: function GETGOODINFO(state, goodInfo) {\n    state.goodInfo = goodInfo;\n  }\n}; //处理action，可以书写自己的业务逻辑，也可以处理自己的异步\n\nvar actions = {\n  //通过API里面的接口函数调用，向服务器发请求，获取服务器数据\n  getGoodInfo: function getGoodInfo(_ref, skuid) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGoodsInfo(skuid);\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit(\"GETGOODINFO\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n}; //getters:理解为计算属性，用于简化仓库数据，让组件区数据更方便\n\nvar getters = {\n  categoryView: function categoryView(state) {\n    return state.goodInfo.categoryView;\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"names":["reqGoodsInfo","state","goodInfo","mutations","GETGOODINFO","actions","getGoodInfo","skuid","commit","result","code","data","getters","categoryView"],"sources":["F:/vuexianmu/app/src/store/detail/index.js"],"sourcesContent":["import { reqGoodsInfo} from \"@/api\"\r\nconst state={\r\n    //state数据别乱写,服务器返回数据，返回数组【根据服务器返回的类型】\r\n  goodInfo:{}\r\n}\r\n//修改state的唯一手段\r\nconst mutations={\r\n    GETGOODINFO(state,goodInfo){\r\n        state.goodInfo=goodInfo\r\n    },\r\n    \r\n}\r\n//处理action，可以书写自己的业务逻辑，也可以处理自己的异步\r\nconst actions={\r\n    //通过API里面的接口函数调用，向服务器发请求，获取服务器数据\r\n    async getGoodInfo({ commit },skuid) {\r\n        //服务器返回banner数据--->存储于vuex当中\r\n        let result = await reqGoodsInfo(skuid);\r\n        if (result.code == 200) {\r\n            commit(\"GETGOODINFO\", result.data);\r\n        }\r\n    },\r\n  \r\n};\r\n//getters:理解为计算属性，用于简化仓库数据，让组件区数据更方便\r\nconst getters={\r\n    categoryView(state){\r\n        return state.goodInfo.categoryView\r\n    }\r\n}\r\nexport default({\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n})"],"mappings":";;AAAA,SAASA,YAAT,QAA4B,OAA5B;AACA,IAAMC,KAAK,GAAC;EACR;EACFC,QAAQ,EAAC;AAFC,CAAZ,C,CAIA;;AACA,IAAMC,SAAS,GAAC;EACZC,WADY,uBACAH,KADA,EACMC,QADN,EACe;IACvBD,KAAK,CAACC,QAAN,GAAeA,QAAf;EACH;AAHW,CAAhB,C,CAMA;;AACA,IAAMG,OAAO,GAAC;EACV;EACMC,WAFI,6BAEmBC,KAFnB,EAE0B;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAhBC,MAAgB,QAAhBA,MAAgB;cAAA;cAAA,OAEbR,YAAY,CAACO,KAAD,CAFC;;YAAA;cAE5BE,MAF4B;;cAGhC,IAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;gBACpBF,MAAM,CAAC,aAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;cACH;;YAL+B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAMnC;AARS,CAAd,C,CAWA;;AACA,IAAMC,OAAO,GAAC;EACVC,YADU,wBACGZ,KADH,EACS;IACf,OAAOA,KAAK,CAACC,QAAN,CAAeW,YAAtB;EACH;AAHS,CAAd;AAKA,eAAe;EACXZ,KAAK,EAALA,KADW;EAEXE,SAAS,EAATA,SAFW;EAGXE,OAAO,EAAPA,OAHW;EAIXO,OAAO,EAAPA;AAJW,CAAf"},"metadata":{},"sourceType":"module"}