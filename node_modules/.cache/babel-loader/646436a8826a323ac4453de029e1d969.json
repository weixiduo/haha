{"ast":null,"code":"import _asyncToGenerator from \"F:/vuexianmu/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqUserRegister, reqUserLogin, reqUserInfo } from '@/api';\nvar state = {\n  code: '',\n  token: ''\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  }\n};\nvar actions = {\n  //获取验证码\n  getCode: function getCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code == 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              commit('GETCODE', result.data);\n              return _context.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n              console.log(result);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //用户注册\n  userRegister: function userRegister(_ref2, user) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(user);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", \"ok\");\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  //登录\n  userLogin: function userLogin(_ref3, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 9;\n                break;\n              }\n\n              commit('USERLOGIN', result.data.token);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  //用户xx\n  getUserInfo: function getUserInfo() {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return reqUserInfo();\n\n            case 2:\n              result = _context4.sent;\n              console.log(result);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"names":["reqGetCode","reqUserRegister","reqUserLogin","reqUserInfo","state","code","token","mutations","GETCODE","USERLOGIN","actions","getCode","phone","commit","result","data","Promise","reject","Error","console","log","userRegister","user","userLogin","getUserInfo","getters"],"sources":["F:/vuexianmu/app/src/store/user.js"],"sourcesContent":["import {reqGetCode,reqUserRegister,reqUserLogin,reqUserInfo}from '@/api'\r\nconst state={\r\n    code:'',\r\n    token:''\r\n}\r\nconst mutations={\r\n    GETCODE(state,code){\r\n        state.code=code\r\n    },\r\n    USERLOGIN(state,token){\r\n      state.token=token\r\n    }\r\n}\r\nconst actions={\r\n    //获取验证码\r\n   async getCode({commit},phone){\r\n   let result=await reqGetCode(phone)\r\n   if(result.code==200){\r\n    commit('GETCODE',result.data)\r\n    return 'ok'\r\n   }else{\r\n    return Promise.reject(new Error('faile'))\r\n   }\r\n   console.log(result)\r\n    },\r\n     //用户注册\r\n  async userRegister({ commit }, user) {\r\n    let result = await reqUserRegister(user);\r\n    if (result.code == 200) {\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error('faile'));\r\n    }\r\n  },\r\n  //登录\r\n  async userLogin({commit},data){\r\n    let result=await reqUserLogin(data)\r\n    //服务器下发的token用户的唯一标识\r\n    //带着token找服务器拿数据\r\n    if(result.code==200){\r\n      commit('USERLOGIN',result.data.token)\r\n      return 'ok'\r\n    }else{\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //用户xx\r\n  async getUserInfo(){\r\n    let result=await reqUserInfo()\r\n    console.log(result)\r\n  }\r\n}\r\nconst getters={}\r\nexport default{\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":";;;;AAAA,SAAQA,UAAR,EAAmBC,eAAnB,EAAmCC,YAAnC,EAAgDC,WAAhD,QAAiE,OAAjE;AACA,IAAMC,KAAK,GAAC;EACRC,IAAI,EAAC,EADG;EAERC,KAAK,EAAC;AAFE,CAAZ;AAIA,IAAMC,SAAS,GAAC;EACZC,OADY,mBACJJ,KADI,EACEC,IADF,EACO;IACfD,KAAK,CAACC,IAAN,GAAWA,IAAX;EACH,CAHW;EAIZI,SAJY,qBAIFL,KAJE,EAIIE,KAJJ,EAIU;IACpBF,KAAK,CAACE,KAAN,GAAYA,KAAZ;EACD;AANW,CAAhB;AAQA,IAAMI,OAAO,GAAC;EACV;EACKC,OAFK,yBAEYC,KAFZ,EAEkB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAdC,MAAc,QAAdA,MAAc;cAAA;cAAA,OACZb,UAAU,CAACY,KAAD,CADE;;YAAA;cACzBE,MADyB;;cAAA,MAE1BA,MAAM,CAACT,IAAP,IAAa,GAFa;gBAAA;gBAAA;cAAA;;cAG5BQ,MAAM,CAAC,SAAD,EAAWC,MAAM,CAACC,IAAlB,CAAN;cAH4B,iCAIrB,IAJqB;;YAAA;cAAA,iCAMrBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CANqB;;YAAA;cAQ7BC,OAAO,CAACC,GAAR,CAAYN,MAAZ;;YAR6B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAS3B,CAXS;EAYT;EACGO,YAbM,+BAamBC,IAbnB,EAayB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAhBT,MAAgB,SAAhBA,MAAgB;cAAA;cAAA,OAChBZ,eAAe,CAACqB,IAAD,CADC;;YAAA;cAC/BR,MAD+B;;cAAA,MAE/BA,MAAM,CAACT,IAAP,IAAe,GAFgB;gBAAA;gBAAA;cAAA;;cAAA,kCAG1B,IAH0B;;YAAA;cAAA,kCAK1BW,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAL0B;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAOpC,CApBW;EAqBZ;EACMK,SAtBM,4BAsBaR,IAtBb,EAsBkB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAbF,MAAa,SAAbA,MAAa;cAAA;cAAA,OACXX,YAAY,CAACa,IAAD,CADD;;YAAA;cACxBD,MADwB;;cAAA,MAIzBA,MAAM,CAACT,IAAP,IAAa,GAJY;gBAAA;gBAAA;cAAA;;cAK1BQ,MAAM,CAAC,WAAD,EAAaC,MAAM,CAACC,IAAP,CAAYT,KAAzB,CAAN;cAL0B,kCAMnB,IANmB;;YAAA;cAAA,kCAQnBU,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CARmB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAU7B,CAhCW;EAiCZ;EACMM,WAlCM,yBAkCO;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACArB,WAAW,EADX;;YAAA;cACbW,MADa;cAEjBK,OAAO,CAACC,GAAR,CAAYN,MAAZ;;YAFiB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAGlB;AArCW,CAAd;AAuCA,IAAMW,OAAO,GAAC,EAAd;AACA,eAAc;EACVrB,KAAK,EAALA,KADU;EAEVG,SAAS,EAATA,SAFU;EAGVG,OAAO,EAAPA,OAHU;EAIVe,OAAO,EAAPA;AAJU,CAAd"},"metadata":{},"sourceType":"module"}