{"ast":null,"code":"require(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.typed-array.uint8-array.js\");\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.copy-within.js\");\n\nrequire(\"core-js/modules/es.typed-array.every.js\");\n\nrequire(\"core-js/modules/es.typed-array.fill.js\");\n\nrequire(\"core-js/modules/es.typed-array.filter.js\");\n\nrequire(\"core-js/modules/es.typed-array.find.js\");\n\nrequire(\"core-js/modules/es.typed-array.find-index.js\");\n\nrequire(\"core-js/modules/es.typed-array.for-each.js\");\n\nrequire(\"core-js/modules/es.typed-array.includes.js\");\n\nrequire(\"core-js/modules/es.typed-array.index-of.js\");\n\nrequire(\"core-js/modules/es.typed-array.iterator.js\");\n\nrequire(\"core-js/modules/es.typed-array.join.js\");\n\nrequire(\"core-js/modules/es.typed-array.last-index-of.js\");\n\nrequire(\"core-js/modules/es.typed-array.map.js\");\n\nrequire(\"core-js/modules/es.typed-array.reduce.js\");\n\nrequire(\"core-js/modules/es.typed-array.reduce-right.js\");\n\nrequire(\"core-js/modules/es.typed-array.reverse.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nrequire(\"core-js/modules/es.typed-array.slice.js\");\n\nrequire(\"core-js/modules/es.typed-array.some.js\");\n\nrequire(\"core-js/modules/es.typed-array.sort.js\");\n\nrequire(\"core-js/modules/es.typed-array.subarray.js\");\n\nrequire(\"core-js/modules/es.typed-array.to-locale-string.js\");\n\nrequire(\"core-js/modules/es.typed-array.to-string.js\");\n\nvar encodeUtf8 = require('encode-utf8');\n\nvar Mode = require('./mode');\n\nfunction ByteData(data) {\n  this.mode = Mode.BYTE;\n  this.data = new Uint8Array(encodeUtf8(data));\n}\n\nByteData.getBitsLength = function getBitsLength(length) {\n  return length * 8;\n};\n\nByteData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nByteData.prototype.getBitsLength = function getBitsLength() {\n  return ByteData.getBitsLength(this.data.length);\n};\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8);\n  }\n};\n\nmodule.exports = ByteData;","map":{"version":3,"names":["encodeUtf8","require","Mode","ByteData","data","mode","BYTE","Uint8Array","getBitsLength","length","prototype","getLength","write","bitBuffer","i","l","put","module","exports"],"sources":["F:/vuexianmu/app/node_modules/_qrcode@1.5.0@qrcode/lib/core/byte-data.js"],"sourcesContent":["const encodeUtf8 = require('encode-utf8')\nconst Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = new Uint8Array(encodeUtf8(data))\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEA,SAASE,QAAT,CAAmBC,IAAnB,EAAyB;EACvB,KAAKC,IAAL,GAAYH,IAAI,CAACI,IAAjB;EACA,KAAKF,IAAL,GAAY,IAAIG,UAAJ,CAAeP,UAAU,CAACI,IAAD,CAAzB,CAAZ;AACD;;AAEDD,QAAQ,CAACK,aAAT,GAAyB,SAASA,aAAT,CAAwBC,MAAxB,EAAgC;EACvD,OAAOA,MAAM,GAAG,CAAhB;AACD,CAFD;;AAIAN,QAAQ,CAACO,SAAT,CAAmBC,SAAnB,GAA+B,SAASA,SAAT,GAAsB;EACnD,OAAO,KAAKP,IAAL,CAAUK,MAAjB;AACD,CAFD;;AAIAN,QAAQ,CAACO,SAAT,CAAmBF,aAAnB,GAAmC,SAASA,aAAT,GAA0B;EAC3D,OAAOL,QAAQ,CAACK,aAAT,CAAuB,KAAKJ,IAAL,CAAUK,MAAjC,CAAP;AACD,CAFD;;AAIAN,QAAQ,CAACO,SAAT,CAAmBE,KAAnB,GAA2B,UAAUC,SAAV,EAAqB;EAC9C,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKX,IAAL,CAAUK,MAA9B,EAAsCK,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAkD;IAChDD,SAAS,CAACG,GAAV,CAAc,KAAKZ,IAAL,CAAUU,CAAV,CAAd,EAA4B,CAA5B;EACD;AACF,CAJD;;AAMAG,MAAM,CAACC,OAAP,GAAiBf,QAAjB"},"metadata":{},"sourceType":"script"}