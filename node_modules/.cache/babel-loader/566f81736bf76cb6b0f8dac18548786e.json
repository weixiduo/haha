{"ast":null,"code":"import _objectSpread from \"F:/vuexianmu/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex'; //这样的引入方式把所有lodash函数全部引入\n//按需引入\n\nimport { throttle } from 'lodash';\nexport default {\n  name: 'TypeNav',\n  data: function data() {\n    return {\n      //存储移上那一级的一级\n      currentIndex: -1,\n      show: true\n    };\n  },\n  methods: {\n    changeIndex: throttle(function (index) {\n      //当鼠标鼠标修改响应式数据时currentIndex属性\n      //回调函数里面业务代码很多，卡顿、业务没有完整完成。\n      //节流功能\n      this.currentIndex = index;\n    }, 50),\n    goSearch: function goSearch(event) {\n      //编程式导航按钮的回调函数\n      //点击a标签进行路由跳转：父节点代理的子节点的类型很多 div h3 dd dt em a\n      //通过event可以获取到当前触发事件的节点\n      var nodeElement = event.target; //给a标签添加自定义属性data-categoryName，保证这个节点带data-categoryName，一定是a标签\n      //可以通过节点的dataset属性获取相应节点的自定义属性，返回的是一个对象KV【自定义属性相关的】\n      //如果带有categoryname字段的一定是a标签\n\n      var _nodeElement$dataset = nodeElement.dataset,\n          categoryname = _nodeElement$dataset.categoryname,\n          category1id = _nodeElement$dataset.category1id,\n          category2id = _nodeElement$dataset.category2id,\n          category3id = _nodeElement$dataset.category3id; //执行if语句：只能区分点击的标签是不是a\n\n      if (categoryname) {\n        //准备路由跳转的参数\n        var location = {\n          name: \"search\"\n        };\n        var query = {\n          categoryName: categoryname\n        }; //一级分类的a标签\n\n        if (category1id) {\n          query.category1Id = category1id; //二级分类的a标签\n        } else if (category2id) {\n          query.category2Id = category2id; //三级分类a标签\n        } else {\n          query.category3Id = category3id;\n        } //路由跳转之前：看一下有没有params参数，如果有params参数需要携带给search\n\n\n        if (this.$route.params) {\n          //query参数\n          location.query = query; //params\n\n          location.params = this.$route.params; //如有有params参数也需要携带给search模块\n          //home->search确实需要记录历史\n          //search->search不需要存储历史记录\n\n          if (this.$route.path != \"/home\") {\n            this.$router.replace(location);\n          } else {\n            this.$router.push(location);\n          }\n        }\n      }\n    },\n    leaveShow: function leaveShow() {\n      this.currentIndex = -1;\n    }\n  },\n  //当组件挂载完毕可以向服务器发请求\n  mounted: function mounted() {\n    this.$store.dispatch('categoryList'); //当组件挂载完毕，让show改成false\n    //  this.show=false\n    //如果不是Home组件，show就为false\n\n    if (this.$route.path != '/home') {\n      this.show = false;\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    //右侧需要的是一个函数，当使用时会使用这个计算属性的时候，右侧函数会立即执行一次\n    //当注入一个参数state的。即为大仓库数据\n    categoryList: function categoryList(state) {\n      return state.home.categoryList;\n    }\n  }))\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,gC,CACA;AACA;;AACA;AACA;EACAA,eADA;EAEAC,IAFA,kBAEA;IACA;MACA;MACAC,gBAFA;MAGAC;IAHA;EAMA,CATA;EAUAC;IAEAC;MACA;MACA;MACA;MACA;IACA,CALA,EAKA,EALA,CAFA;IAQAC,QARA,oBAQAC,KARA,EAQA;MACA;MACA;MACA;MACA,+BAJA,CAKA;MACA;MACA;;MACA,2BACAC,mBADA;MAAA;MAAA;MAAA;MAAA,mDARA,CAUA;;MACA;QACA;QACA;UAAAR;QAAA;QACA;UAAAS;QAAA,EAHA,CAIA;;QACA;UACAC,gCADA,CAEA;QACA,CAHA,MAGA;UACAA,gCADA,CAEA;QACA,CAHA,MAGA;UACAA;QACA,CAbA,CAcA;;;QACA;UACA;UACAC,uBAFA,CAGA;;UACAA,qCAJA,CAKA;UACA;UACA;;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;QACA;MACA;IACA,CAjDA;IAkDAC,SAlDA,uBAkDA;MACA;IACA;EApDA,CAVA;EAgEA;EACAC,OAjEA,qBAiEA;IACA,qCADA,CAEA;IACA;IACA;;IACA;MACA;IACA;EACA,CAzEA;EA0EAC,4BACAC;IACA;IACA;IACAC;MAAA;IAAA;EAHA,EADA;AA1EA","names":["name","data","currentIndex","show","methods","changeIndex","goSearch","event","nodeElement","categoryName","query","location","leaveShow","mounted","computed","mapState","categoryList"],"sourceRoot":"src/components/TypeNav","sources":["index.vue"],"sourcesContent":["<template>\r\n<div class=\"outer\">\r\n   <div class=\"type-nav\">\r\n    <div class=\"container\">\r\n <div @mouseleave=\"leaveShow\">\r\n      <h2 class=\"all\" @mouseenter=\"changeShow\">全部商品分类</h2>\r\n      <nav class=\"nav\">\r\n        <a href=\"###\">服装城</a>\r\n        <a href=\"###\">美妆馆</a>\r\n        <a href=\"###\">尚品汇超市</a>\r\n        <a href=\"###\">全球购</a>\r\n        <a href=\"###\">闪购</a>\r\n        <a href=\"###\">团购</a>\r\n        <a href=\"###\">有趣</a>\r\n        <a href=\"###\">秒杀</a>\r\n      </nav>\r\n      <!-- 三级分类 -->\r\n        <div class=\"sort\" v-show=\"show\">\r\n        <div class=\"all-sort-list2\" @click=\"goSearch\">\r\n          <div class=\"item\"\r\n           v-for=\"(c1,index) in categoryList\" \r\n           :key=\"c1.categoryId\" \r\n           :class=\"{cur:currentIndex==index}\"\r\n          @mouseenter=\"changeIndex(index)\">\r\n            <h3 class=\"{ show: currentIndex === index }\">\r\n              <!-- <a href=\"\">{{c1.categoryName}}</a> -->\r\n              <!-- <router-link to=\"/search\">{{c1.categoryName}}</router-link> -->\r\n              <a :data-categoryName=\"c1.categoryName\"\r\n              :data-categoryId=\"c1.categoryId\">{{c1.categoryName}}</a>\r\n            </h3>\r\n          <!-- 二三级分类 -->\r\n            <div class=\"item-list clearfix\" \r\n            @mousedown=\"leaveShow\"\r\n            :style=\"{display:currentIndex==index?'block':'none'}\">\r\n              <div class=\"subitem\" v-for=\"(c2,index) in c1.categoryChild\" :key=\"c2.categoryId\">\r\n                <dl class=\"fore\">\r\n                  <dt>\r\n                    <!-- <a href=\"\">{{c2.categoryName}}</a> -->\r\n                     <!-- <router-link to=\"/search\">{{c2.categoryName}}</router-link> -->\r\n                        <a :data-categoryName=\"c2.categoryName\"\r\n              :data-category2Id=\"c1.categoryId\">{{c2.categoryName}}</a>\r\n                  </dt>\r\n                  <dd>\r\n                    <em v-for=\"(c3,index) in c2.categoryChild\" :key=\"c3.categoryId\">\r\n                      <!-- <a href=\"\">{{c3.categoryName}}</a> -->\r\n                       <!-- <router-link to=\"/search\">{{c3.categoryName}}</router-link> -->\r\n                          <a :data-categoryName=\"c3.categoryName\"\r\n              :data-category3Id=\"c3.categoryId\">{{c3.categoryName}}</a>\r\n                    </em>\r\n                   \r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n      \r\n        </div>\r\n        </div>\r\n    </div>\r\n   </div> \r\n</div>\r\n</template>\r\n<script>\r\nimport {mapState} from 'vuex'\r\n//这样的引入方式把所有lodash函数全部引入\r\n//按需引入\r\nimport {throttle} from 'lodash'\r\nexport default {\r\n    name: 'TypeNav',\r\n    data(){\r\n   return{\r\n     //存储移上那一级的一级\r\n     currentIndex:-1,\r\n     show:true\r\n     \r\n    }\r\n    },\r\n    methods:{\r\n\r\n    changeIndex:throttle(function(index){\r\n      //当鼠标鼠标修改响应式数据时currentIndex属性\r\n   //回调函数里面业务代码很多，卡顿、业务没有完整完成。\r\n    //节流功能\r\n      this.currentIndex=index;\r\n    },50),\r\n  goSearch(event){\r\n  //编程式导航按钮的回调函数\r\n      //点击a标签进行路由跳转：父节点代理的子节点的类型很多 div h3 dd dt em a\r\n      //通过event可以获取到当前触发事件的节点\r\n      let nodeElement = event.target;\r\n      //给a标签添加自定义属性data-categoryName，保证这个节点带data-categoryName，一定是a标签\r\n      //可以通过节点的dataset属性获取相应节点的自定义属性，返回的是一个对象KV【自定义属性相关的】\r\n      //如果带有categoryname字段的一定是a标签\r\n      let { categoryname, category1id, category2id, category3id } =\r\n        nodeElement.dataset;\r\n      //执行if语句：只能区分点击的标签是不是a\r\n      if (categoryname) {\r\n        //准备路由跳转的参数\r\n        let location = { name: \"search\" };\r\n        let query = { categoryName: categoryname };\r\n        //一级分类的a标签\r\n        if (category1id) {\r\n          query.category1Id = category1id;\r\n          //二级分类的a标签\r\n        } else if (category2id) {\r\n          query.category2Id = category2id;\r\n          //三级分类a标签\r\n        } else {\r\n          query.category3Id = category3id;\r\n        }\r\n        //路由跳转之前：看一下有没有params参数，如果有params参数需要携带给search\r\n        if (this.$route.params) {\r\n          //query参数\r\n          location.query = query;\r\n          //params\r\n          location.params = this.$route.params;\r\n          //如有有params参数也需要携带给search模块\r\n          //home->search确实需要记录历史\r\n          //search->search不需要存储历史记录\r\n          if (this.$route.path != \"/home\") {\r\n            this.$router.replace(location);\r\n          } else {\r\n            this.$router.push(location);\r\n          }\r\n        }\r\n      }\r\n  },\r\n  leaveShow(){\r\n    this.currentIndex=-1\r\n  }\r\n    },\r\n    //当组件挂载完毕可以向服务器发请求\r\n    mounted(){\r\n      this.$store.dispatch('categoryList');\r\n     //当组件挂载完毕，让show改成false\r\n    //  this.show=false\r\n    //如果不是Home组件，show就为false\r\n    if(this.$route.path!='/home'){\r\n      this.show=false\r\n    }\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        //右侧需要的是一个函数，当使用时会使用这个计算属性的时候，右侧函数会立即执行一次\r\n        //当注入一个参数state的。即为大仓库数据\r\n       categoryList: (state) => state.home.categoryList,\r\n      })\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/*.item:hover{\r\n  background-color: rgb(115, 132, 122);\r\n}*/\r\n.item-list a{\r\n  text-decoration: none;\r\n}\r\n.cur:hover{\r\n  background-color: rgb(22, 202, 130);\r\n}\r\n.outer .type-nav .container {\r\n  width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  position: relative;\r\n}\r\n.outer .type-nav .container .all {\r\n  width: 210px;\r\n  height: 45px;\r\n  background-color: #36a97b;\r\n  line-height: 35px;\r\n  text-align: center;\r\n  color: rgb(30, 29, 29);\r\n  font-size: 14px;\r\n  font-weight: 2000;\r\n}\r\n.outer .type-nav .container .nav a {\r\n  height: 45px;\r\n  margin: 0 22px;\r\n  line-height: 45px;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n.outer .type-nav .container .sort {\r\n  left: 0px;\r\n  top: 45px;\r\n  width: 210px;\r\n  height: 461px;\r\n  position: absolute;\r\n  background: #fafafa;\r\n  z-index: 999;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item h3 {\r\n  line-height: 30px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  padding: 0 20px;\r\n  margin: 0;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item h3 a {\r\n  color: rgb(203, 21, 21);\r\n  text-decoration: none;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item .item-list {\r\n  display: none;\r\n  position: absolute;\r\n  width: 734px;\r\n  min-height: 460px;\r\n  background: #779663;\r\n  left: 210px;\r\n  border: 1px solid #ddd;\r\n  top: 0;\r\n  z-index: 9999 !important;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item .item-list .subitem {\r\n  float: left;\r\n  width: 650px;\r\n  padding: 0 4px 0 8px;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item .item-list .subitem dl {\r\n  border-top: 1px solid #eee;\r\n  padding: 6px 0;\r\n  overflow: hidden;\r\n\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item .item-list .subitem dl.fore {\r\n  border-top: 0;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item .item-list .subitem dl dt {\r\n  float: left;\r\n  width: 60px;\r\n  line-height: 22px;\r\n  text-align: right;\r\n  padding: 3px 6px 0 0;\r\n  font-weight: 700;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item .item-list .subitem dl dd {\r\n  float: left;\r\n  width: 400px;\r\n  padding: 3px 0 0;\r\n  overflow: hidden;\r\n}\r\n.outer .type-nav .container .sort .all-sort-list2 .item .item-list .subitem dl dd em {\r\n  float: left;\r\n  height: 14px;\r\n  line-height: 14px;\r\n  padding: 0 8px;\r\n  margin-top: 5px;\r\n  border-left: 1px solid #ccc;\r\n}\r\n\r\n/*.outer .type-nav .container .sort .all-sort-list2 .item:hover .item-list{\r\n  display:block;\r\n}*/\r\n</style>"]},"metadata":{},"sourceType":"module"}