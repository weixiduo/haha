{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqUserRegister, reqUserLogin, reqUserInfo, reqLogout } from '@/api';\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\nconst state = {\n  code: '',\n  token: getToken(),\n  userInfo: {}\n};\nconst mutations = {\n  GETCODE(state, code) {\n    state.code = code;\n  },\n\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n\n  GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n\n  //清除本地数据\n  CLEAR(state) {\n    //帮仓库中先关用户信息清空\n    state.token = '';\n    state.userInfo = {}; //本地存储数据清空\n\n    removeToken();\n  }\n\n};\nconst actions = {\n  //获取验证码\n  async getCode({\n    commit\n  }, phone) {\n    let result = await reqGetCode(phone);\n\n    if (result.code == 200) {\n      commit('GETCODE', result.data);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n\n    console.log(result);\n  },\n\n  //用户注册\n  async userRegister({\n    commit\n  }, user) {\n    let result = await reqUserRegister(user);\n\n    if (result.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  //登录\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqUserLogin(data); //服务器下发的token用户的唯一标识\n    //带着token找服务器拿数据\n\n    if (result.code == 200) {\n      commit('USERLOGIN', result.data.token); //本地存储token\n\n      setToken(result.data.token);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  //用户信息\n  //获取用户信息\n  async getUserInfo({\n    commit\n  }) {\n    let result = await reqUserInfo();\n    console.log(result);\n\n    if (result.code == 200) {\n      //提交用户信息\n      commit(\"GETUSERINFO\", result.data);\n      return 'ok';\n    }\n  },\n\n  //退出登录\n  async userLogout({\n    commit\n  }) {\n    //只是向服务器发起一次请求，通知服务器清除token\n    let result = await reqLogout(); //action里面不能操作state，提交mutation修改state\n\n    if (result.code == 200) {\n      commit(\"CLEAR\");\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  }\n\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqGetCode","reqUserRegister","reqUserLogin","reqUserInfo","reqLogout","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","actions","getCode","commit","phone","result","data","Promise","reject","Error","console","log","userRegister","user","userLogin","getUserInfo","userLogout","getters"],"sources":["E:/桌面/app/src/store/user.js"],"sourcesContent":["import {reqGetCode,reqUserRegister,reqUserLogin,reqUserInfo,reqLogout}from '@/api'\r\nimport {setToken,getToken,removeToken} from \"@/utils/token\";\r\nconst state={\r\n    code:'',\r\n    token:getToken(),\r\n    userInfo:{}\r\n}\r\nconst mutations={\r\n    GETCODE(state,code){\r\n        state.code=code\r\n    },\r\n    USERLOGIN(state,token){\r\n      state.token=token\r\n    },\r\n    GETUSERINFO(state, userInfo) {\r\n      state.userInfo = userInfo;\r\n    },\r\n     //清除本地数据\r\n  CLEAR(state){\r\n    //帮仓库中先关用户信息清空\r\n    state.token = '';\r\n    state.userInfo={};\r\n    //本地存储数据清空\r\n    removeToken();\r\n  }\r\n}\r\nconst actions={\r\n    //获取验证码\r\n   async getCode({commit},phone){\r\n   let result=await reqGetCode(phone)\r\n   if(result.code==200){\r\n    commit('GETCODE',result.data)\r\n    return 'ok'\r\n   }else{\r\n    return Promise.reject(new Error('faile'))\r\n   }\r\n   console.log(result)\r\n    },\r\n     //用户注册\r\n  async userRegister({ commit }, user) {\r\n    let result = await reqUserRegister(user);\r\n    if (result.code == 200) {\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error('faile'));\r\n    }\r\n  },\r\n  //登录\r\n  async userLogin({commit},data){\r\n    let result=await reqUserLogin(data)\r\n    //服务器下发的token用户的唯一标识\r\n    //带着token找服务器拿数据\r\n    if(result.code==200){\r\n      commit('USERLOGIN',result.data.token)\r\n      //本地存储token\r\n     setToken(result.data.token)\r\n      return 'ok'\r\n    }else{\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //用户信息\r\n //获取用户信息\r\n async getUserInfo({ commit }) {\r\n  let result = await reqUserInfo();\r\n  console.log(result)\r\n  if (result.code == 200) {\r\n    //提交用户信息\r\n    commit(\"GETUSERINFO\", result.data);\r\n    return 'ok';\r\n  }\r\n},\r\n//退出登录\r\nasync userLogout({commit}) {\r\n  //只是向服务器发起一次请求，通知服务器清除token\r\n  let result = await reqLogout();\r\n  //action里面不能操作state，提交mutation修改state\r\n  if(result.code==200){\r\n    commit(\"CLEAR\");\r\n    return 'ok';\r\n  }else{\r\n    return Promise.reject(new Error('faile'));\r\n  }\r\n},\r\n}\r\nconst getters={}\r\nexport default{\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}