{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqCartList, reqDeleteCartById, reqUpdateCheckedByid } from \"@/api\";\nconst state = {\n  cartList: []\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n\n};\nconst actions = {\n  //获取购物车列表的数据\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n\n    if (result.code == 200) {\n      commit(\"GETCARTLIST\", result.data);\n    }\n  },\n\n  async deleteCartListBySkuId({\n    commit\n  }, skuId) {\n    let result = await reqDeleteCartById(skuId);\n\n    if (result.code == 200) {\n      return 'OK';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  async updateCheckedById({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateCheckedByid(skuId, isChecked);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  }\n\n};\nconst getters = {\n  cartList(state) {\n    return state.cartList[0] || {};\n  }\n\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqCartList","reqDeleteCartById","reqUpdateCheckedByid","state","cartList","mutations","GETCARTLIST","actions","getCartList","commit","result","code","data","deleteCartListBySkuId","skuId","Promise","reject","Error","updateCheckedById","isChecked","getters"],"sources":["E:/桌面/app/src/store/shopcar/index.js"],"sourcesContent":["import { reqCartList,reqDeleteCartById,reqUpdateCheckedByid } from \"@/api\"\r\n\r\nconst state={\r\n    cartList: [],\r\n}\r\nconst mutations={\r\n    GETCARTLIST(state,cartList){\r\n            state.cartList=cartList\r\n    }\r\n}\r\nconst actions={\r\n    //获取购物车列表的数据\r\n\r\n  async getCartList({ commit }) {\r\n    let result = await reqCartList();\r\n    if (result.code == 200) {\r\n      commit(\"GETCARTLIST\", result.data);\r\n    }\r\n  },\r\n  async deleteCartListBySkuId({commit},skuId){\r\n    let result=await reqDeleteCartById(skuId)\r\n    if(result.code==200){\r\n      return 'OK'\r\n    }else{\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  async updateCheckedById({commit},{skuId,isChecked}){\r\n    let result=await reqUpdateCheckedByid(skuId,isChecked)\r\n    if(result.code==200){\r\n      return 'ok'\r\n    }else{\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  }\r\n}\r\nconst getters={\r\n    cartList(state) {\r\n        return state.cartList[0] || {};\r\n      },\r\n}\r\nexport default{\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":";AAAA,SAASA,WAAT,EAAqBC,iBAArB,EAAuCC,oBAAvC,QAAmE,OAAnE;AAEA,MAAMC,KAAK,GAAC;EACRC,QAAQ,EAAE;AADF,CAAZ;AAGA,MAAMC,SAAS,GAAC;EACZC,WAAW,CAACH,KAAD,EAAOC,QAAP,EAAgB;IACnBD,KAAK,CAACC,QAAN,GAAeA,QAAf;EACP;;AAHW,CAAhB;AAKA,MAAMG,OAAO,GAAC;EACV;EAEF,MAAMC,WAAN,CAAkB;IAAEC;EAAF,CAAlB,EAA8B;IAC5B,IAAIC,MAAM,GAAG,MAAMV,WAAW,EAA9B;;IACA,IAAIU,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;MACtBF,MAAM,CAAC,aAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;IACD;EACF,CARW;;EASZ,MAAMC,qBAAN,CAA4B;IAACJ;EAAD,CAA5B,EAAqCK,KAArC,EAA2C;IACzC,IAAIJ,MAAM,GAAC,MAAMT,iBAAiB,CAACa,KAAD,CAAlC;;IACA,IAAGJ,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAClB,OAAO,IAAP;IACD,CAFD,MAEK;MACH,OAAOI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;IACD;EACF,CAhBW;;EAiBZ,MAAMC,iBAAN,CAAwB;IAACT;EAAD,CAAxB,EAAiC;IAACK,KAAD;IAAOK;EAAP,CAAjC,EAAmD;IACjD,IAAIT,MAAM,GAAC,MAAMR,oBAAoB,CAACY,KAAD,EAAOK,SAAP,CAArC;;IACA,IAAGT,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAClB,OAAO,IAAP;IACD,CAFD,MAEK;MACH,OAAOI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;IACD;EACF;;AAxBW,CAAd;AA0BA,MAAMG,OAAO,GAAC;EACVhB,QAAQ,CAACD,KAAD,EAAQ;IACZ,OAAOA,KAAK,CAACC,QAAN,CAAe,CAAf,KAAqB,EAA5B;EACD;;AAHO,CAAd;AAKA,eAAc;EACVD,KADU;EAEVE,SAFU;EAGVE,OAHU;EAIVa;AAJU,CAAd"},"metadata":{},"sourceType":"module"}