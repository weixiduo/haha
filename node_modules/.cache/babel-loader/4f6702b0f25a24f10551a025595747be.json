{"ast":null,"code":"import _asyncToGenerator from \"F:/vuexianmu/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqGoodsInfo } from \"@/api\";\nvar state = {//state数据别乱写,服务器返回数据，返回数组【根据服务器返回的类型】\n}; //修改state的唯一手段\n\nvar mutations = {\n  CATEGORYLIST: function CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  GETBANNERLIST: function GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  GETFLOORLLIST: function GETFLOORLLIST(state, floorList) {\n    state.floorList = floorList;\n  }\n}; //处理action，可以书写自己的业务逻辑，也可以处理自己的异步\n\nvar actions = {\n  //通过API里面的接口函数调用，向服务器发请求，获取服务器数据\n  getGoodsInfo: function getGoodsInfo(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGoodsInfo(skuId);\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit(\"GETGOODSINFO\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n}; //getters:理解为计算属性，用于简化仓库数据，让组件区数据更方便\n\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"names":["reqGoodsInfo","state","mutations","CATEGORYLIST","categoryList","GETBANNERLIST","bannerList","GETFLOORLLIST","floorList","actions","getGoodsInfo","commit","skuId","result","code","data","getters"],"sources":["F:/vuexianmu/app/src/store/detail/index.js"],"sourcesContent":["import { reqGoodsInfo } from \"@/api\"\r\nconst state={\r\n    //state数据别乱写,服务器返回数据，返回数组【根据服务器返回的类型】\r\n  \r\n}\r\n//修改state的唯一手段\r\nconst mutations={\r\n    CATEGORYLIST(state,categoryList){\r\n        state.categoryList=categoryList\r\n    },\r\n    GETBANNERLIST(state,bannerList){\r\n        state.bannerList=bannerList\r\n    },\r\n    GETFLOORLLIST(state,floorList){\r\n        state.floorList=floorList\r\n    }\r\n    \r\n}\r\n//处理action，可以书写自己的业务逻辑，也可以处理自己的异步\r\nconst actions={\r\n    //通过API里面的接口函数调用，向服务器发请求，获取服务器数据\r\n    async getGoodsInfo({ commit }) {\r\n        //服务器返回banner数据--->存储于vuex当中\r\n        let result = await reqGoodsInfo(skuId);\r\n        if (result.code == 200) {\r\n            commit(\"GETGOODSINFO\", result.data);\r\n        }\r\n    },\r\n  \r\n};\r\n//getters:理解为计算属性，用于简化仓库数据，让组件区数据更方便\r\nconst getters={}\r\nexport default({\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n})"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,OAA7B;AACA,IAAMC,KAAK,GAAC,CACR;AADQ,CAAZ,C,CAIA;;AACA,IAAMC,SAAS,GAAC;EACZC,YADY,wBACCF,KADD,EACOG,YADP,EACoB;IAC5BH,KAAK,CAACG,YAAN,GAAmBA,YAAnB;EACH,CAHW;EAIZC,aAJY,yBAIEJ,KAJF,EAIQK,UAJR,EAImB;IAC3BL,KAAK,CAACK,UAAN,GAAiBA,UAAjB;EACH,CANW;EAOZC,aAPY,yBAOEN,KAPF,EAOQO,SAPR,EAOkB;IAC1BP,KAAK,CAACO,SAAN,GAAgBA,SAAhB;EACH;AATW,CAAhB,C,CAYA;;AACA,IAAMC,OAAO,GAAC;EACV;EACMC,YAFI,8BAEqB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAVC,MAAU,QAAVA,MAAU;cAAA;cAAA,OAERX,YAAY,CAACY,KAAD,CAFJ;;YAAA;cAEvBC,MAFuB;;cAG3B,IAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;gBACpBH,MAAM,CAAC,cAAD,EAAiBE,MAAM,CAACE,IAAxB,CAAN;cACH;;YAL0B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAM9B;AARS,CAAd,C,CAWA;;AACA,IAAMC,OAAO,GAAC,EAAd;AACA,eAAe;EACXf,KAAK,EAALA,KADW;EAEXC,SAAS,EAATA,SAFW;EAGXO,OAAO,EAAPA,OAHW;EAIXO,OAAO,EAAPA;AAJW,CAAf"},"metadata":{},"sourceType":"module"}